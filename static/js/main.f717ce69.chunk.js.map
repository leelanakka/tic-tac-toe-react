{"version":3,"sources":["Player.js","App.js","index.js"],"names":["Player","name","symbol","Object","classCallCheck","this","moves","set1","set2","every","element","includes","winningChances","_this","some","list","isSubset","move","push","App","props","possibleConstructorReturn","getPrototypeOf","call","player1","player2","players","state","turn","row","j","_this2","map","x","i","react_default","a","createElement","key","onClick","insertMove","bind","getMoves","_this3","setState","isMovePresent","shift","addMove","isWin","_this4","className","createRow","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"uKAwBeA,aAvBb,SAAAA,EAAYC,EAAMC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACzBK,KAAKH,OAASA,EACdG,KAAKJ,KAAOA,EACZI,KAAKC,MAAQ,wDAGNC,EAAMC,GACb,OAAOA,EAAKC,MAAM,SAAAC,GAAO,OAAIH,EAAKI,SAASD,mCAGvCE,GAAgB,IAAAC,EAAAR,KACpB,OAAOO,EAAeE,KAAK,SAAAC,GAAI,OAAIF,EAAKG,SAASH,EAAKP,MAAOS,qCAGvDE,GACNZ,KAAKC,MAAMY,KAAKD,sCAIhB,OAAOZ,KAAKC,eCqDDa,cArEb,SAAAA,EAAYC,GAAO,IAAAP,EAAA,OAAAV,OAAAC,EAAA,EAAAD,CAAAE,KAAAc,IACjBN,EAAAV,OAAAkB,EAAA,EAAAlB,CAAAE,KAAAF,OAAAmB,EAAA,EAAAnB,CAAAgB,GAAAI,KAAAlB,KAAMe,KACDI,QAAU,IAAIxB,EAAO,QAAS,KACnCa,EAAKY,QAAU,IAAIzB,EAAO,WAAY,KACtCa,EAAKD,eAAiB,CACpB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAKa,QAAU,CAACb,EAAKW,QAASX,EAAKY,SACnCZ,EAAKc,MAAQ,CACXrB,MAAO,CAAC,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,KAAM,CAAC,IAAK,IAAK,MACrDsB,KAAMf,EAAKa,QAAQ,GAAGzB,KAAO,SAjBdY,yEAqBTgB,EAAKC,GAAG,IAAAC,EAAA1B,KAChB,OAAOwB,EAAIG,IAAI,SAACC,EAAGC,GAAJ,OACbC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAIJ,EAAGS,QAASR,EAAKS,WAAWC,KAAKV,EAAMD,EAAGI,IACpDD,2CAKOC,EAAGJ,GACf,OACGzB,KAAKqB,QAAQ,GAAGgB,WAAW/B,SAAa,EAAJuB,EAAQJ,KAC5CzB,KAAKqB,QAAQ,GAAGgB,WAAW/B,SAAa,EAAJuB,EAAQJ,sCAItCI,EAAGJ,GAAG,IAAAa,EAAAtC,KACfA,KAAKuC,SAAS,SAAAjB,GAAS,IACbrB,EAAUqB,EAAVrB,MAOR,OANIqC,EAAKE,cAAcX,EAAGJ,KACxBa,EAAKjB,QAAQR,KAAKyB,EAAKjB,QAAQoB,SAC/BxC,EAAM4B,GAAGJ,GAAKa,EAAKjB,QAAQ,GAAGxB,OAC9ByB,EAAMC,KAAOe,EAAKjB,QAAQ,GAAGzB,KAAO,QACpC0C,EAAKjB,QAAQ,GAAGqB,QAAY,EAAJb,EAAQJ,IAE9Ba,EAAKjB,QAAQ,GAAGsB,MAAML,EAAK/B,iBAC7Be,EAAMC,KAAOe,EAAKjB,QAAQ,GAAGzB,KAAO,gBAC7B,CAAEK,UAEJ,CAAEA,4CAIJ,IAAA2C,EAAA5C,KACP,OACE8B,EAAAC,EAAAC,cAAA,OAAKa,UAAU,SACbf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,WAAW7C,KAAKsB,MAAMC,MACrCO,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGhC,KAAKsB,MAAMrB,MAAM0B,IAAI,SAACC,EAAGJ,GACxB,OAAOM,EAAAC,EAAAC,cAAA,MAAIC,IAAKT,EAAM,IAAMA,GAArB,IAA4BoB,EAAKE,UAAUlB,EAAGJ,gBA7DjDuB,IAAMC,WCCxBC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f717ce69.chunk.js","sourcesContent":["class Player {\n  constructor(name, symbol) {\n    this.symbol = symbol;\n    this.name = name;\n    this.moves = [];\n  }\n\n  isSubset(set1, set2) {\n    return set2.every(element => set1.includes(element));\n  }\n\n  isWin(winningChances) {\n    return winningChances.some(list => this.isSubset(this.moves, list));\n  }\n\n  addMove(move) {\n    this.moves.push(move);\n  }\n\n  getMoves() {\n    return this.moves;\n  }\n}\n\nexport default Player;\n","import React from \"react\";\nimport Player from \"./Player\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.player1 = new Player(\"leela\", \"X\");\n    this.player2 = new Player(\"prasanth\", \"O\");\n    this.winningChances = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n    this.players = [this.player1, this.player2];\n    this.state = {\n      moves: [[\" \", \" \", \" \"], [\" \", \" \", \" \"], [\" \", \" \", \" \"]],\n      turn: this.players[0].name + \" turn\"\n    };\n  }\n\n  createRow(row, j) {\n    return row.map((x, i) => (\n      <td key={i + j} onClick={this.insertMove.bind(this, j, i)}>\n        {x}\n      </td>\n    ));\n  }\n\n  isMovePresent(i, j) {\n    return (\n      !this.players[0].getMoves().includes(i * 3 + j) &&\n      !this.players[1].getMoves().includes(i * 3 + j)\n    );\n  }\n\n  insertMove(i, j) {\n    this.setState(state => {\n      const { moves } = state;\n      if (this.isMovePresent(i, j)) {\n        this.players.push(this.players.shift());\n        moves[i][j] = this.players[0].symbol;\n        state.turn = this.players[0].name + \" turn\";\n        this.players[0].addMove(i * 3 + j);\n      }\n      if (this.players[0].isWin(this.winningChances)) {\n        state.turn = this.players[1].name + \" won the game\";\n        return { moves };\n      }\n      return { moves };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"table\">\n        <div className=\"message\">{this.state.turn}</div>\n        <table>\n          <tbody>\n            {this.state.moves.map((x, row) => {\n              return <tr key={row + \"1\" + row}> {this.createRow(x, row)}</tr>;\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}